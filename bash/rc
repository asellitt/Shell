# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

if [ -f /opt/boxen/env.sh ]; then
    source /opt/boxen/env.sh
fi

# don't put duplicate lines in the history. See bash(1) for more options
# ... or force ignoredups and ignorespace
HISTCONTROL=ignoredups:ignorespace

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
    # We have color support; assume it's compliant with Ecma-48
    # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
    # a case would tend to support setf rather than setaf.)
    color_prompt=yes
    else
    color_prompt=
    fi
fi

if [ -f ~/.bash_include ]; then
    . ~/.bash_include
fi

# Prompt

# Prompt colors
BLACK='\[\e[00;30m\]'
BOLD_BLACK='\[\e[01;30m\]'
RED='\[\e[00;31m\]'
BOLD_RED='\[\e[01;31m\]'
GREEN='\[\e[00;32m\]'
BOLD_GREEN='\[\e[01;32m\]'
YELLOW='\[\e[00;33m\]'
BOLD_YELLOW='\[\e[01;33m\]'
BLUE='\[\e[00;34m\]'
BOLD_BLUE='\[\e[01;34m\]'
MAGENTA='\[\e[00;35m\]'
BOLD_MAGENTA='\[\e[01;35m\]'
CYAN='\[\e[00;36m\]'
BOLD_CYAN='\[\e[01;36m\]'
WHITE='\[\e[00;37m\]'
BOLD_WHITE='\[\e[01;37m\]'
CLEAR='\[\e[0m\]'

if [ "$color_prompt" = yes ]; then
    if type current-branch &>/dev/null; then
        export PS1="$CYAN\u$CLEAR@$MAGENTA\h$CLEAR [ $GREEN\$(current-branch)$CLEAR ] : $RED\w\n$BLUE\d \@$CLEAR \$ > "
    else
        export PS1="$CYAN\u$CLEAR@$MAGENTA\h$CLEAR : $RED\w\n$BLUE\d \@$CLEAR \$ > "
    fi
else
    export PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi

if [ -f $(brew --prefix)/etc/bash_completion ]; then
    . $(brew --prefix)/etc/bash_completion
fi

if [ -f ~/.git-completion.bash ]; then
    . ~/.git-completion.bash
    complete -o default -o nospace -F _git g
fi

[[ -s `brew --prefix`/etc/autojump.sh ]] && . `brew --prefix`/etc/autojump.sh

# chipi's gems
bind '"\e[A"':history-search-backward
bind '"\e[B"':history-search-forward
bind Space:magic-space

export PATH=$PATH:$HOME/path:/user/local/sbin/:$HOME/.git-commands:$HOME/.rbenv/bin:/Applications/Postgres.app/Contents/Versions/9.3/bin
#export CC=/usr/local/bin/gcc-4.2
export CLICOLOR=1

export ANDROID_HOME=$HOME/Library/Android/sdk
export PATH=$PATH:$ANDROID_HOME/emulator
export PATH=$PATH:$ANDROID_HOME/tools
export PATH=$PATH:$ANDROID_HOME/tools/bin
export PATH=$PATH:$ANDROID_HOME/platform-tools

if [ -f $(brew --prefix asdf)/asdf.sh ]; then
    . $(brew --prefix asdf)/asdf.sh
    . $(brew --prefix asdf)/etc/bash_completion.d/asdf.bash
fi

if hash direnv 2>/dev/null;then
    eval "$(direnv hook bash)"
fi

# FU VIM! GET STUFFED
#export EDITOR="subl -n -w"
#export GIT_EDITOR=${EDITOR}

export LESS="-R"#eval "$(lesspipe)"

### Added by the Heroku Toolbelt
export PATH="/usr/local/heroku/bin:$PATH"

export GOPATH=$HOME/src/.go
export LPASS_AGENT_TIMEOUT=0

# envato elements shit
export PATH="/usr/local/opt/elasticsearch@2.4/bin:$PATH"
export PATH="/usr/local/opt/postgresql@9.4/bin:$PATH"

# to compile ergodox firmware
export PATH="/usr/local/opt/avr-gcc@6/bin:$PATH"
